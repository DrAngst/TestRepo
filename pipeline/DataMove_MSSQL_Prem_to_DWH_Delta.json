{
	"name": "DataMove_MSSQL_Prem_to_DWH_Delta",
	"properties": {
		"activities": [
			{
				"name": "get_info",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[sp_get_object_instruction]",
						"storedProcedureParameters": {
							"ObjectID": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.MoveObjectID",
									"type": "Expression"
								}
							}
						}
					},
					"dataset": {
						"referenceName": "DF_META",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "mark_get_source",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "get_info",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderQuery": {
							"value": "select \n    max(@{activity('get_info').output.firstRow.FMarkColumn}) as Mark \n    ,count(1) as [RowCount] \nfrom \n    @{activity('get_info').output.firstRow.FSourceDB}.@{activity('get_info').output.firstRow.FSourceTable} \nwhere \n    @{replace(activity('get_info').output.firstRow.FMarkSearchSQL,'$FROM$',string(activity('get_info').output.firstRow.FLastMark))}",
							"type": "Expression"
						}
					},
					"dataset": {
						"referenceName": "MSSQL_OnPrem_Dynamic",
						"type": "DatasetReference",
						"parameters": {
							"ConnectionStringSecretKey": {
								"value": "@pipeline().parameters.ConnectionStringSecretKey",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "check_if_to_load",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "mark_get_source",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@{greater(activity('mark_get_source').output.firstRow.RowCount,0)}",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "mark_set_idle",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[sp_set_mark]",
								"storedProcedureParameters": {
									"DataRead": {
										"value": "0",
										"type": "Int32"
									},
									"DataWritten": {
										"value": "0",
										"type": "Int32"
									},
									"Duration": {
										"value": "0",
										"type": "Int32"
									},
									"ObjectID": {
										"value": {
											"value": "@pipeline().parameters.MoveObjectID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"RowsCopied": {
										"value": "0",
										"type": "Int32"
									},
									"RowsRead": {
										"value": "0",
										"type": "Int32"
									},
									"Value": {
										"value": {
											"value": "@{activity('get_info').output.firstRow.FLastMark}",
											"type": "Expression"
										},
										"type": "String"
									},
									"InitMarkSource": {
										"value": {
											"value": "@{activity('get_info').output.firstRow.FLastMark}",
											"type": "Expression"
										},
										"type": "String"
									},
									"InitMarkDest": {
										"value": {
											"value": "@{activity('get_info').output.firstRow.FLastMark}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "Azure_SQL_DF_META",
								"type": "LinkedServiceReference"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Move",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlSource",
									"sqlReaderQuery": {
										"value": "select \n    @{activity('get_info').output.firstRow.FSelect} \nfrom \n    @{activity('get_info').output.firstRow.FSourceDB}.@{activity('get_info').output.firstRow.FSourceTable} \nwhere \n@{replace(replace(activity('get_info').output.firstRow.FMarkFilterSQL,'$FROM$',string(activity('get_info').output.firstRow.FLastMark)),'$TO$',string(activity('mark_get_source').output.firstRow.Mark))}\n",
										"type": "Expression"
									}
								},
								"sink": {
									"type": "SqlSink",
									"writeBatchSize": 10000,
									"preCopyScript": {
										"value": "@activity('get_info').output.firstRow.FDestProcedurePre",
										"type": "Expression"
									}
								},
								"enableStaging": false,
								"dataIntegrationUnits": 0
							},
							"inputs": [
								{
									"referenceName": "MSSQL_OnPrem_Dynamic",
									"type": "DatasetReference",
									"parameters": {
										"ConnectionStringSecretKey": {
											"value": "@pipeline().parameters.ConnectionStringSecretKey",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ON_PREM",
									"type": "DatasetReference",
									"parameters": {
										"Table": {
											"value": "@activity('get_info').output.firstRow.FDestTable",
											"type": "Expression"
										},
										"DB": {
											"value": "@activity('get_info').output.firstRow.FDestDB",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "post_proc",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Move",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.01:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": {
									"value": "@activity('get_info').output.firstRow.FDestProcedurePost",
									"type": "Expression"
								}
							},
							"linkedServiceName": {
								"referenceName": "MSSQL_On_Prem",
								"type": "LinkedServiceReference",
								"parameters": {
									"constr": {
										"value": "@pipeline().parameters.ConnectionStringSecretKeyDST",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "mark_set",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "post_proc",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[sp_set_mark]",
								"storedProcedureParameters": {
									"DataRead": {
										"value": {
											"value": "@activity('Move').output.dataRead",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"DataWritten": {
										"value": {
											"value": "@activity('Move').output.dataWritten",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Duration": {
										"value": {
											"value": "@activity('Move').output.copyDuration",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"ObjectID": {
										"value": {
											"value": "@pipeline().parameters.MoveObjectID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"RowsCopied": {
										"value": {
											"value": "@activity('Move').output.rowsCopied",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"RowsRead": {
										"value": {
											"value": "@activity('Move').output.rowsRead",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Value": {
										"value": {
											"value": "@activity('mark_get_source').output.firstRow.Mark",
											"type": "Expression"
										},
										"type": "String"
									},
									"InitMarkSource": {
										"value": {
											"value": "@activity('mark_get_source').output.firstRow.Mark",
											"type": "Expression"
										},
										"type": "String"
									},
									"InitMarkDest": {
										"value": {
											"value": "@{activity('get_info').output.firstRow.FLastMark}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "Azure_SQL_DF_META",
								"type": "LinkedServiceReference",
								"parameters": {
									"environment": "dev"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"MoveObjectID": {
				"type": "Int",
				"defaultValue": 205
			},
			"ConnectionStringSecretKey": {
				"type": "String",
				"defaultValue": "con-str-prem-mssql-dorma"
			},
			"ConnectionStringSecretKeyDST": {
				"type": "String",
				"defaultValue": "con-str-prem-mssql-dwh"
			}
		},
		"folder": {
			"name": "DataMove"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}