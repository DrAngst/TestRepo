{
	"name": "DataMove_PG_to_Blob_Delta",
	"properties": {
		"activities": [
			{
				"name": "mark_get_source",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "get_info",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RelationalSource",
						"query": {
							"value": "select max(@{activity('get_info').output.firstRow.FMarkColumn}) as Mark,count(1) as RowCount\nfrom \n\n@{activity('get_info').output.firstRow.FSourceDB}.@{activity('get_info').output.firstRow.FSourceTable} \n\nwhere \n@{replace(activity('get_info').output.firstRow.FMarkSearchSQL,'$FROM$',string(activity('get_info').output.firstRow.FLastMark))}",
							"type": "Expression"
						}
					},
					"dataset": {
						"referenceName": "AWS_RDS_Postgres_Cloud_GW",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "get_info",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:00:30",
					"retry": 20,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[sp_get_object_instruction]",
						"storedProcedureParameters": {
							"ObjectID": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.MoveObjectID",
									"type": "Expression"
								}
							}
						}
					},
					"dataset": {
						"referenceName": "DF_META",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "get_info_env",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:00:30",
					"retry": 20,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[sp_read_param_text]",
						"storedProcedureParameters": {
							"ObjectName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.Env",
									"type": "Expression"
								}
							},
							"Param": {
								"type": "String",
								"value": "dl_root"
							}
						}
					},
					"dataset": {
						"referenceName": "DF_META",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "mark_get_source",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "get_info_env",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@{greater(activity('mark_get_source').output.firstRow.RowCount,0)}",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "set_mark_empty",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "0.00:10:00",
								"retry": 10,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[sp_set_mark]",
								"storedProcedureParameters": {
									"DataRead": {
										"value": null,
										"type": "Int64"
									},
									"DataWritten": {
										"value": null,
										"type": "Int64"
									},
									"Duration": {
										"value": null,
										"type": "Int64"
									},
									"ObjectID": {
										"value": {
											"value": "@pipeline().parameters.MoveObjectID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"RowsCopied": {
										"value": null,
										"type": "Int64"
									},
									"RowsRead": {
										"value": null,
										"type": "Int64"
									},
									"Value": {
										"value": null,
										"type": "String"
									},
									"ValueType": {
										"value": null,
										"type": "String"
									},
									"InitMarkSource": {
										"value": null,
										"type": "String"
									},
									"InitMarkDest": {
										"value": null,
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "Azure_SQL_DF_META",
								"type": "LinkedServiceReference"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Move",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 1,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RelationalSource",
									"query": {
										"value": "select @{activity('get_info').output.firstRow.FSelect} from @{activity('get_info').output.firstRow.FSourceDB}.@{activity('get_info').output.firstRow.FSourceTable} \nwhere \n@{replace(replace(activity('get_info').output.firstRow.FMarkFilterSQL,'$FROM$',string(activity('get_info').output.firstRow.FLastMark)),'$TO$',string(activity('mark_get_source').output.firstRow.Mark))}\n",
										"type": "Expression"
									}
								},
								"sink": {
									"type": "BlobSink"
								},
								"enableStaging": false,
								"dataIntegrationUnits": 0
							},
							"inputs": [
								{
									"referenceName": "AWS_RDS_Postgres_Cloud_GW",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "Azure_Blob_json_gz",
									"type": "DatasetReference",
									"parameters": {
										"blob_root": {
											"value": "@activity('get_info_env').output.firstRow.Value",
											"type": "Expression"
										},
										"blob_object": {
											"value": "@{if(empty(activity('get_info').output.firstRow.FDestTable),activity('get_info').output.firstRow.FSourceTable,activity('get_info').output.firstRow.FDestTable)}",
											"type": "Expression"
										},
										"blob_file_prefix": {
											"value": "@{if(empty(activity('get_info').output.firstRow.FDestTable),activity('get_info').output.firstRow.FSourceTable,activity('get_info').output.firstRow.FDestTable)}",
											"type": "Expression"
										},
										"blob_project": {
											"value": "@{activity('get_info').output.firstRow.FProject}/@{activity('get_info').output.firstRow.FSourceDB}",
											"type": "Expression"
										},
										"load_type": {
											"value": "@activity('get_info').output.firstRow.FLoadType",
											"type": "Expression"
										},
										"blob_extension": {
											"value": "@activity('get_info').output.firstRow.FDestParam",
											"type": "Expression"
										},
										"date_part": {
											"value": "@{replace(substring(formatDateTime(utcnow()),0,10),'-','/')}",
											"type": "Expression"
										},
										"datetime_part": {
											"value": "@{replace(substring(formatDateTime(utcnow()),0,19),':','_')}",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "mark_set",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Move",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.00:10:00",
								"retry": 10,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[sp_set_mark]",
								"storedProcedureParameters": {
									"DataRead": {
										"value": {
											"value": "@activity('Move').output.dataRead",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"DataWritten": {
										"value": {
											"value": "@activity('Move').output.dataWritten",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Duration": {
										"value": {
											"value": "@activity('Move').output.copyDuration",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"ObjectID": {
										"value": {
											"value": "@pipeline().parameters.MoveObjectID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"RowsCopied": {
										"value": {
											"value": "@activity('Move').output.rowsCopied",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"RowsRead": {
										"value": {
											"value": "@activity('Move').output.rowsRead",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Value": {
										"value": {
											"value": "@activity('mark_get_source').output.firstRow.Mark",
											"type": "Expression"
										},
										"type": "String"
									},
									"ValueType": {
										"value": {
											"value": "@activity('get_info').output.firstRow.FMarkColumnType",
											"type": "Expression"
										},
										"type": "String"
									},
									"InitMarkSource": {
										"value": {
											"value": "@activity('mark_get_source').output.firstRow.Mark",
											"type": "Expression"
										},
										"type": "String"
									},
									"InitMarkDest": {
										"value": {
											"value": "@activity('get_info').output.firstRow.FLastMark",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "Azure_SQL_DF_META",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"MoveObjectID": {
				"type": "Int",
				"defaultValue": 86
			},
			"Env": {
				"type": "String",
				"defaultValue": "prod"
			}
		},
		"folder": {
			"name": "DataMove"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}